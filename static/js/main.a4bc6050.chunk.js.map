{"version":3,"sources":["constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/Todos/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["SIGN_IN","HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","todo","todoid","todos","area","areaid","areas","app","initializeApp","database","_ref","mdbreact_esm","className","to","ROUTES","onClick","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","color","dark","expand","scrolling","href","left","right","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","App","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_React$createElement","_React$createElement2","_React$createElement3","_this$state2","md","htmlFor","type","placeholder","Link","style","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","SignInForm","SignInPage","marginLeft","marginRight","width","HomePage","loading","toos","on","snapshot","todosObject","val","todosList","keys","map","areasObject","arealist","off","Home_AreaList","Modal","setAppElement","document","getElementById","AreaList","display","flexWrap","border","padding","borderRadius","marginBottom","marginTop","backgroundColor","fontWeight","Home_AreaItem","items","customStyles","content","top","bottom","transform","AreaItem","_this3","modalIsOpen","openModal","bind","assertThisInitialized","afterOpenModal","closeModal","subtitle","_this4","filtered","i","length","Card_default","CardContent_default","Typography_default","component","Home_TodoView","CardActions_default","Button_default","size","lib_default","isOpen","onAfterOpen","onRequestClose","contentLabel","Home_TodoList","TodoView","_ref2","location","TodoList","_ref3","FormControlLabel_default","control","Switch_default","label","PasswordChangeForm","PasswordChange","AdminPage","usersObject","usersList","Admin_UserList","UserList","areaCreate","TodosBase","deleteTodo","remove","handleChange","e","newList","filter","item","lc","toLowerCase","includes","AddTodo","Todos_TodoList","background","float","AddTodoBase","created","Date","toISOString","replace","missing","low","onChangeLocation","onChangeAreaCreate","onSubmitAreaCreate","handleAreaChange","console","log","invalid","trim","areainvalid","react_select_esm","options","isSearchable","variant","disabled","Todos","BrowserRouter","components_Navigation","Route","exact","path","LandingPage","AccountPage","TodosPage","Boolean","window","hostname","match","ReactDOM","render","context","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4bc6050.chunk.js","sourcesContent":["\nexport const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/evanzhao/uw/TidySpace'; //signin\nexport const HOME = '/home';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const PASSWORD_FORGET = '/pw-forget';\nexport const TODOS = '/todos';\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nvar config = {\n  apiKey: \"AIzaSyBObXMfhpLNUOPl05rMhkj0YRNJdjIEoWA\",\n  authDomain: \"tidyspace.firebaseapp.com\",\n  databaseURL: \"https://tidyspace.firebaseio.com\",\n  projectId: \"tidyspace\",\n  storageBucket: \"tidyspace.appspot.com\",\n  messagingSenderId: \"367121613358\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n  doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n  doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n  doSignOut = () => this.auth.signOut();\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n  user = uid => this.db.ref(`users/${uid}`);\n  users = () => this.db.ref('users');\n\n  // *** Todos API ***\n  todo = todoid => this.db.ref(`todos/${todoid}`);\n  todos = () => this.db.ref('todos');\n\n  area = areaid => this.db.ref(`area/${areaid}`);\n  areas = () => this.db.ref('areas');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { NavLink } from 'mdbreact'\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <NavLink className=\"nav-link waves-effect waves-light\" to={ROUTES.SIGN_IN} onClick={firebase.doSignOut}>Sign Out</NavLink>\n  // <button\n  //   style={{\n  //     padding: 0, border: \"none\",\n  //     font: \"inherit\", color: \"inherit\", backgroundColor: \"transparent\", cursor: \"pointer\"\n  //   }}\n  //   onClick={firebase.doSignOut}>\n  //   Sign Out\n  // </button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: null,\n      };\n    }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          authUser\n            ? this.setState({ authUser })\n            : this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\n// import { Link } from 'react-router-dom';\nimport { Navbar, NavbarBrand, NavItem, NavbarNav, NavLink } from 'mdbreact'\n\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\nimport { AuthUserContext } from '../Session';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nconst Navigation = () => (\n  <div>\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <Navbar color=\"teal\" dark expand=\"md\" scrolling>\n    <NavbarBrand href=\"/home\">\n      <strong>TidySpace</strong>\n    </NavbarBrand>\n    <NavbarNav left>\n      <NavItem>\n        <NavLink className=\"nav-link waves-effect waves-light\" to={ROUTES.HOME}>Spaces</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link waves-effect waves-light\" to={ROUTES.TODOS}>Item</NavLink>\n      </NavItem>\n      <NavItem>\n        <NavLink className=\"nav-link waves-effect waves-light\" to={ROUTES.ACCOUNT}>Account</NavLink>\n      </NavItem>\n      {/* <NavItem>\n        <NavLink className=\"nav-link waves-effect waves-light\" to={ROUTES.ADMIN}>Admin</NavLink>\n      </NavItem> */}\n      <NavbarNav right>\n        <NavItem>\n          <SignOutButton />\n        </NavItem>\n      </NavbarNav>\n    </NavbarNav>\n  </Navbar>\n  // <ul>\n  //   <li>\n  //     <Link to={ROUTES.LANDING}>Landing</Link>\n  //   </li>\n  //   <li>\n  //     <Link to={ROUTES.HOME}>Home</Link>\n  //   </li>\n  //   <li>\n  //     <Link to={ROUTES.TODOS}>Todos</Link>\n  //   </li>\n  //   <li>\n  //     <Link to={ROUTES.ACCOUNT}>Account</Link>\n  //   </li>\n  //   <li>\n  //     <Link to={ROUTES.ADMIN}>Admin</Link>\n  //   </li>\n  //   <li>\n  //     <SignOutButton />\n  //   </li>\n  // </ul>\n);\n\nconst NavigationNonAuth = () => (\n  // <ul>\n  //   <li>\n  //     <Link to={ROUTES.LANDING}>Landing</Link>\n  //   </li>\n  //   <li>\n  //     <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n  //   </li>\n  // </ul>\n  <Navbar color=\"teal\" dark expand=\"md\" scrolling>\n    <NavbarBrand>\n      <strong>TidySpace</strong>\n    </NavbarBrand>\n  </Navbar>\n);\n\nexport default Navigation;","import React from 'react';\n\nconst App = () => (\n  <div>\n    <h1>App</h1>\n  </div>\n);\n\nexport default App;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n  <div>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  }\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"username\"\n      //     value={username}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Full Name\"\n      //   />\n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"passwordOne\"\n      //     value={passwordOne}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <input\n      //     name=\"passwordTwo\"\n      //     value={passwordTwo}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Confirm Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">Sign Up</button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={this.onSubmit}>\n              <p className=\"h4 text-center mb-4\">Sign up</p>\n              <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\n                Your name\n                </label>\n              <input\n                name=\"username\"\n                value={username}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Full Name\"\n                className=\"form-control\"\n              />\n              <br />\n              <label htmlFor=\"defaultFormRegisterEmailEx\" className=\"grey-text\">\n                Your email\n                </label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n                type=\"email\"\n                className=\"form-control\"\n              />\n              <br />\n              <label\n                htmlFor=\"defaultFormRegisterPasswordEx\"\n                className=\"grey-text\"\n              >\n                Your password\n                </label>\n              <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <br />\n              <label\n                htmlFor=\"defaultFormRegisterPasswordEx\"\n                className=\"grey-text\"\n              >\n                Confirm password\n                </label>\n              <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"indigo\" type=\"submit\">\n                  Register\n                  </MDBBtn>\n                <Link style={{ color: \"white\" }} to={ROUTES.SIGN_IN}>\n                  <MDBBtn color=\"unique\">Back to log in</MDBBtn>\n                </Link>\n              </div>\n              {error && <p>{error.message}</p>}\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = compose(\n  withRouter,\n  withFirebase,\n)(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n\n    const isInvalid = email === '';\n\n    return (\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={this.onSubmit}>\n              <p className=\"h4 text-center mb-4\">Password Reset Request</p>\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                Your email\n            </label>\n              <input\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n                type=\"email\"\n                className=\"form-control\"\n              />\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"indigo\" type=\"submit\">Email Reset</MDBBtn>\n                <Link to={ROUTES.SIGN_IN}>\n                  <MDBBtn color=\"unique\" type=\"submit\">Back to Login</MDBBtn>\n                </Link>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={this.state.email}\n      //     onChange={this.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Reset My Password\n      //   </button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n  <div style={{ marginLeft: \"auto\", marginRight: \"auto\", width: \"60vw\" }}>\n    <SignInForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"email\"\n      //     value={email}\n      //     onChange={thygbis.onChange}\n      //     type=\"text\"\n      //     placeholder=\"Email Address\"\n      //   />\n      //   <input\n      //     name=\"password\"\n      //     value={password}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Sign In\n      //   </button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <MDBContainer className=\"text-center mt-4\">\n        <MDBRow>\n          <MDBCol md=\"9\">\n            <form onSubmit={this.onSubmit}>\n              <p className=\"h4 text-center mb-4\">Sign in</p>\n              <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n                Your email\n          </label>\n              <input\n                name=\"email\"\n                value={email}\n                onChange={this.onChange}\n                type=\"text\"\n                placeholder=\"Email Address\"\n                type=\"email\"\n                className=\"form-control\"\n              />\n              <br />\n              <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                Your password\n          </label>\n              <input\n                name=\"password\"\n                value={password}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Password\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <div className=\"text-center mt-4\">\n                <MDBBtn color=\"indigo\" type=\"submit\">Login</MDBBtn>\n              </div>\n              {error && <p>{error.message}</p>}\n            </form>\n            <div className=\"text-center mt-4\">\n              <PasswordForgetLink />\n              <SignUpLink />\n            </div>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\n\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport { withAuthorization } from '../Session';\nimport Modal from 'react-modal';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n// import {\n//   Modal,\n//   ModalHeader,\n//   ModalTitle,\n//   ModalClose,\n//   ModalBody,\n//   ModalFooter\n// } from 'react-modal-bootstrap';\n\n\n// const HomePage = () => (\n//   <div style={{ marginLeft: \"10vw\" }}>\n//     <h1>Your Spaces</h1>\n//     <p>The Home Page is accessible by every signed in user.</p>\n//     <Spaces />\n//   </div>\n// );\n\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      areas: [],\n      toos: []\n    };\n\n  }\n\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.todos().on('value', snapshot => {\n      const todosObject = snapshot.val();\n\n      const todosList = Object.keys(todosObject || {}).map(key => ({\n        ...todosObject[key],\n        todoid: key,\n      }));\n\n      this.setState({\n        todos: todosList,\n        loading: false,\n      });\n    });\n\n    this.props.firebase.areas().on('value', snapshot => {\n      const areasObject = snapshot.val();\n      const arealist = Object.keys(areasObject || {}).map(key => ({\n        ...areasObject[key],\n        areaid: key,\n      }));\n      this.setState({\n        areas: arealist,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.areas().off();\n  }\n\n  render() {\n    return (\n      <div style={{ marginLeft: \"10vw\" }}>\n        <h1>Area List</h1>\n        <AreaList areas={this.state.areas} todos={this.state.todos} />\n      </div>\n    );\n  }\n}\n\nModal.setAppElement(document.getElementById('root'));\n\nconst AreaList = ({ areas, todos }) => (\n  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    {areas.map(area => (\n      <div key={area.value} style={{\n        border: \"1px solid #99d5cf\", padding: \"1rem\", borderRadius: \"5px\", marginRight: \"2rem\",\n        marginBottom: \"2rem\", marginTop: \"2rem\", backgroundColor: \"#99d5cf\"\n      }}>\n        <h4 style={{ fontWeight: \"400\" }}>{area.value}</h4>\n        <AreaItem items={todos} area={area} />\n      </div>\n    ))}\n  </div>\n);\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nclass AreaItem extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false,\n      items: [],\n      area: [],\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      items: this.props.items,\n      area: this.props.area,\n    })\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = 'black';\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    var items = this.state.items;\n    var filtered = [];\n    var area = this.state.area;\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].area.value === area.value) {\n        filtered.push(items[i])\n      }\n    }\n    return (\n      <div>\n        <Card>\n          <CardContent>\n            {filtered.length === 0 ?\n              <Typography component=\"p\">\n                No Items\n        </Typography>\n\n              :\n              <TodoView todos={filtered} area={this.props.area} ></TodoView>\n            }\n          </CardContent>\n          <CardActions>\n            <Button onClick={this.openModal} size=\"small\">Full List - ({filtered.length})</Button>\n          </CardActions>\n        </Card>\n        {/* <button className=\"btn btn-primary\" onClick={this.openModal}>Full List - ({filtered.length})</button> */}\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n\n          <h2 ref={subtitle => this.subtitle = subtitle}>{this.props.area.value}</h2>\n          <TodoList todos={filtered} area={this.props.area} />\n          <button className=\"btn btn-warning\" onClick={this.closeModal}>close</button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst TodoView = ({ todos, area }) => (\n  <div>\n    {todos.map(todo => (\n      <div>\n        <Typography component=\"p\">\n          {todo.todo}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {todo.location}\n        </Typography>\n      </div>\n    ))}\n  </div>\n);\n\nconst TodoList = ({ todos, area }) => (\n  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    {todos.map(todo => (\n      <div key={todo.todoid} style={{ padding: \".4rem\", marginRight: \"2rem\", border: '1px solid black' }}>\n        <p>Name: {todo.todo} {\"\\n\"}</p>\n        <p>Area: {todo.area.value}</p>\n        <p>Location: {todo.location}</p>\n        <FormControlLabel\n          control={\n            <Switch\n            // checked='false'\n            // onChange={this.handleChange('gilad')}\n            // value=\"gilad\"\n            />\n          }\n          label=\"Item Low\"\n        />\n        <FormControlLabel\n          control={\n            <Switch\n            // checked='false'\n            // onChange={this.handleChange('gilad')}\n            // value=\"gilad\"\n            />\n          }\n          label=\"Item Missing\"\n        />\n      </div>\n    ))}\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);\n\n\n  // componentDidMount() {\n  //   let todosList = this.state.todos;\n  //   let locations = [];\n  //   let output = [];\n  //   for (let i = 0; i <= todosList.length; i++) {\n  //     if (!locations.includes(todosList[i].location)) {\n  //       locations.push(todosList[i].location)\n  //       output.push(todosList[i])\n  //     }\n  //   }\n  // }","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { passwordOne } = this.state;\n\n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n\n    return (\n      // <form onSubmit={this.onSubmit}>\n      //   <input\n      //     name=\"passwordOne\"\n      //     value={passwordOne}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"New Password\"\n      //   />\n      //   <input\n      //     name=\"passwordTwo\"\n      //     value={passwordTwo}\n      //     onChange={this.onChange}\n      //     type=\"password\"\n      //     placeholder=\"Confirm New Password\"\n      //   />\n      //   <button disabled={isInvalid} type=\"submit\">\n      //     Reset My Password\n      //   </button>\n\n      //   {error && <p>{error.message}</p>}\n      // </form>\n      <MDBContainer>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <form onSubmit={this.onSubmit}>\n              <p className=\"h4 mb-4\">Account Username: {this.props.username}</p>\n              <p className=\"h4 mb-4\">Account Email: {this.props.email}</p>\n              <p className=\"h4 mb-4\">Change your password</p>\n\n              <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                Your password\n                </label>\n              <input\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"New Password\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <br />\n              <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n                Your password\n                </label>\n              <input\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={this.onChange}\n                type=\"password\"\n                placeholder=\"Confirm New Password\"\n                type=\"password\"\n                className=\"form-control\"\n              />\n              <div className=\"mt-4\">\n                <MDBBtn color=\"indigo\" type=\"submit\">Change Password</MDBBtn>\n              </div>\n            </form>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <PasswordChangeForm email={authUser.email} username={authUser.username} />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.users().on('value', snapshot => {\n      const usersObject = snapshot.val();\n\n      const usersList = Object.keys(usersObject).map(key => ({\n        ...usersObject[key],\n        uid: key,\n      }));\n\n      this.setState({\n        users: usersList,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.users().off();\n  }\n\n  render() {\n    const { users, loading } = this.state;\n\n    return (\n      <div>\n        <h1>Admin</h1>\n\n        {loading && <div>Loading ...</div>}\n\n        <UserList users={users} />\n      </div>\n    );\n  }\n}\n\nconst UserList = ({ users }) => (\n  <ul>\n    {users.map(user => (\n      <li key={user.uid}>\n        <span>\n          <strong>ID:</strong> {user.uid}\n        </span>\n        <span>\n          <strong>E-Mail:</strong> {user.email}\n        </span>\n        <span>\n          <strong>Username:</strong> {user.username}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default withFirebase(AdminPage);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport { compose } from 'recompose';\nimport Select from 'react-select';\n\nconst INITIAL_STATE = {\n  todo: '',\n  location: '',\n  area: null,\n  areaCreate: '',\n};\n\nclass TodosBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      todos: [],\n      filtered: [],\n      areas: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  handleChange(e) {\n    let currentList = [];\n    let newList = [];\n\n    if (e.target.value !== \"\") {\n      currentList = this.state.todos;\n      newList = currentList.filter(item => {\n        const lc = item.todo.toLowerCase();\n        const filter = e.target.value.toLowerCase();\n        return lc.includes(filter);\n      });\n    } else {\n      newList = this.state.todos;\n    }\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true });\n\n    this.props.firebase.todos().on('value', snapshot => {\n      const todosObject = snapshot.val();\n\n      const todosList = Object.keys(todosObject || {}).map(key => ({\n        ...todosObject[key],\n        todoid: key,\n      }));\n\n      this.setState({\n        todos: todosList,\n        filtered: todosList,\n        loading: false,\n      });\n    });\n\n    this.props.firebase.areas().on('value', snapshot => {\n      const areasObject = snapshot.val();\n\n      const arealist = Object.keys(areasObject || {}).map(key => ({\n        ...areasObject[key],\n        areaid: key,\n      }));\n\n      this.setState({\n        areas: arealist,\n        loading: false,\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.todos().off();\n    this.props.firebase.areas().off();\n  }\n\n  deleteTodo = todoid => {\n    this.props.firebase.todo(todoid).remove();\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div style={{ marginLeft: \"10vw\" }}>\n        <AddTodo areas={this.state.areas} />\n        <hr />\n        <h1>Item List</h1>\n        <input type=\"text\" className=\"input\" onChange={(this.handleChange)} placeholder=\"Search...\" />\n        <br />\n        <TodoList todos={this.state.filtered} deleteTodo={this.deleteTodo} />\n      </div>\n    );\n  }\n}\n\n\nconst TodoList = ({ todos, deleteTodo }) => (\n  <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n    {todos.map(todo => (\n      <div key={todo.todoid} style={{\n        border: \"1px solid #99d5cf\", padding: \"1rem\", borderRadius: \"2rem\", marginRight: \"2rem\",\n        marginBottom: \"2rem\", marginTop: \"2rem\", backgroundColor: \"#99d5cf\"\n      }}>\n        <button onClick={() => deleteTodo(todo.todoid)} style={{\n          background: \"none\", border: \"none\", float: \"right\"\n        }}>\n          <i className=\"fa fa-close\"></i>\n        </button>\n        <p style={{ fontWeight: \"500\" }}>Name: {todo.todo} {\"\\n\"}</p>\n        <p style={{ fontWeight: \"500\" }}>Area: {todo.area.value}</p>\n        <p style={{ fontWeight: \"500\" }}>Location: {todo.location}</p>\n      </div>\n    ))}\n  </div>\n);\n\nclass AddTodoBase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    var newTodo = this.props.firebase.todos().push({\n      created: new Date().toISOString().replace('T', ' ').replace('Z', ''),\n      todo: this.state.todo,\n      location: this.state.location,\n      area: this.state.area,\n      missing: false,\n      low: false\n    });\n    this.setState({ ...INITIAL_STATE });\n    event.preventDefault();\n  }\n\n  onChange = event => {\n    this.setState({ todo: event.target.value });\n  }\n  onChangeLocation = event => {\n    this.setState({ location: event.target.value });\n  }\n\n  onChangeAreaCreate = event => {\n    this.setState({ areaCreate: event.target.value });\n  }\n\n  onSubmitAreaCreate = event => {\n    var newArea = this.props.firebase.areas().push({\n      value: this.state.areaCreate,\n      label: this.state.areaCreate\n    });\n    this.setState({ areaCreate: '' })\n    event.preventDefault();\n  }\n\n  handleAreaChange = (area) => {\n    this.setState({ area: area });\n    console.log(`Option selected:`, area);\n  }\n\n  render() {\n\n    const invalid = this.state.todo.trim() === '';\n    const areainvalid = this.state.areaCreate.trim() === '';\n\n    return (\n      <div>\n        <h3>\n          Add Item\n        </h3>\n        <form onSubmit={this.onSubmit}>\n          <input\n            name=\"todo\"\n            value={this.state.todo}\n            onChange={this.onChange}\n            type=\"text\"\n            placeholder=\"Enter item name\"\n          />\n          <Select\n            value={this.state.area}\n            onChange={this.handleAreaChange}\n            options={this.props.areas}\n            placeholder=\"Select item area\"\n            isSearchable=\"true\"\n          />\n          <input\n            name=\"todo\"\n            value={this.state.location}\n            onChange={this.onChangeLocation}\n            type=\"text\"\n            placeholder=\"Enter location\"\n          />\n          <button variant=\"contained\" color=\"primary\" disabled={invalid} type=\"submit\">\n            Add Item\n        </button>\n        </form>\n        <br />\n        <h3>\n          Add Area\n        </h3>\n        <form onSubmit={this.onSubmitAreaCreate}>\n          <input\n            name=\"todo\"\n            value={this.state.areaCreate}\n            onChange={this.onChangeAreaCreate}\n            type=\"text\"\n            placeholder=\"Enter Area\"\n          />\n          <button variant=\"contained\" color=\"primary\" disabled={areainvalid} type=\"submit\">\n            Add Area\n        </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst AddTodo = compose(\n  withFirebase,\n)(AddTodoBase);\n\nconst Todos = compose(\n  withFirebase,\n)(TodosBase);\n\nexport default Todos;\n\n\n// Front Desk\n// Nursing station – has storage – general supplies\n// -\tThings that you don’t necessarily need in the office\n// Exam rooms\n// Procedure room\n// Medical office\n\n// Closet with lock on\n// Procedure Nursing Station has most of the stuff\n// Exam room has some things\n\n// One of the nurses is in charge of restocking","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport TodosPage from '../Todos';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\n\nimport { withAuthentication } from '../Session';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Navigation />\n\n      <hr />\n\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\n      <Route path={ROUTES.HOME} component={HomePage} />\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\n      <Route path={ROUTES.TODOS} component={TodosPage} />\n    </div>\n  </Router>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}